Img_Data<- brick('sentinel.tif')
plot(Img_Data)
nlayers(Img_Data)
plotRGB(Img_Data, r = 1, g = 2, b =3, axes = TRUE, stretch = "lin",
main = "data Visual")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi, col = rev(terrain.colors(30)), main = 'NDVI from Sentinel')
band1<-raster(Img_Data,layer=7)
band2<-raster(Img_Data,layer=3)
ndvi<-(band1-band2) / (band1+band2)
ndvi
plot(ndvi, col = rev(terrain.colors(30)), main = 'NDVI from Sentinel')
subset_data<-subset(Img_Data, 1:3)
extent(subset_data)
new_extent<-extent(355000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
new_extent<-extent(355000, 260000,  -375000,  -370000)
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi, col = rev(terrain.colors(30)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(30)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(10)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(50)), main = 'NDVI from Sentinel')
plot(ndvi, col =gray, main = 'NDVI from Sentinel')
plot(ndvi, col = rev(terrain.colors(50)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(terrain.colors(80)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(80)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
plot(subset_data)
subset_data<-subset(Img_Data, 1:7)
names(subset_data)
extent(subset_data)
plot(subset_data)
subset_data<-subset(Img_Data, 1:8)
new_extent<-extent(355000, 260000,  -375000,  -370000)
new_extent<-extent(255000, 260000,  -375000,  -370000)
new_extent<-extent(260000, 260000,  -370000,  -370000)
croped_Img<-crop(subset_data,new_extent)
new_extent<-extent(255000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
new_extent<-extent(260000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
new_extent<-extent(2580000, 260000,  -375000,  -370000)
new_extent<-extent(2500000, 260000,  -375000,  -370000)
new_extent<-extent(260000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
new_extent<-extent(260000, 250000,  -375000,  -370000)
new_extent<-extent(260000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 5, g = 2, b = 1, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img)
plot(croped_Img)
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
library(raster)
library(sp)
library(dplyr)
library(tidyr)
library(plyr)
Img_Data<- brick('sentinel.tif')
Img_Data
plot(Img_Data)
glimpse(Img_Data)
crs(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
plotRGB(Img_Data, r = 1, g = 2, b =3, axes = TRUE, stretch = "lin",
main = "data Visual")
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(260000, 260000,  -380000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plot(croped_Img)
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
plot(croped_Img)
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
croped_Img<-crop(subset_data,new_extent)
new_extent<-extent(2550000, 260000,  -375000,  -370000)
new_extent<-extent(255000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
new_extent<-extent(245000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
new_extent<-extent(245000, 270000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(Img_Data, r = 1, g = 2, b =3, axes = TRUE, stretch = "lin",
main = "data Visual")
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
Img_Data<- brick('Raster_Img_Ind.tif')
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI from Sentinel')
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(raster)
library(dplyr)
library(tidyr)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data<- brick('Raster_Img_Ind.tif')
plotRGB(Img_Data, r = 1, g = 2, b =3, axes = TRUE, stretch = "lin",
main = "data Visual")
names(subset_data)<-c(1:8)
plotRGB(croped_Img, r = 1, g = 2, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
plotRGB(croped_Img, r = 5, g = 1, b = 3, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
plotRGB(croped_Img, r = 1, g = 5, b = 2, axes = TRUE, stretch = "lin",
main = "Landsat Subset")
plotRGB(croped_Img, r = 1, g = 5, b = 2, axes = TRUE, stretch = "lin",
main = "Vegetation")
(croped_Img, r = 1, g = 5, b = 2,stretch = "lin",
main = "Vegetation")
plotRGB(croped_Img, r = 1, g = 5, b = 2,stretch = "lin",main = "Vegetation")
plotRGB(croped_Img, r = 2, g = 5, b = 2,stretch = "lin",main = "Vegetation")
plotRGB(croped_Img, r = 2, g = 8, b = 2,stretch = "lin",main = "Vegetation")
plotRGB(croped_Img, r = 2, g = 10, b = 2,stretch = "lin",main = "Vegetation")
plotRGB(croped_Img, r = 2, g = 9, b = 2,stretch = "lin",main = "Vegetation")
plotRGB(croped_Img, r = 2, g = 8, b = 2,stretch = "lin",main = "Vegetation")
plot(ndvi,main = 'NDVI')
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
plot(ndvi,main = 'NDVI')
plot(ndvi, col = rev(heat.colors(180)), main = 'NDVI')
plot(ndvi, col = rev(heat.colors(50)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(50)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(150)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(5)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(10)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(5)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(8)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(10)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(5)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
nlayers(Img_Data)
names(Img_Data)
names(subset_data)<-c(1:8)
plot(subset_data)
names(subset_data)
plot(ndvi, col = rev(terrain.colors(10)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(50)), main = 'NDVI')
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
library(raster)
library(sp)
library(dplyr)
library(tidyr)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data
plot(Img_Data)
glimpse(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
library(raster)
library(sp)
library(dplyr)
library(tidyr)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data
plot(Img_Data)
crs(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
library(dplyr)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
ndvi
plot(vegc, col = rev(terrain.colors(4)), main = 'NDVI based thresholding')
vegc <- reclassify(ndvi, c(-Inf,0.2,0, 0.2,0.3,1, 0.3,0.4,2, 0.4,0.5,3, 0.5, Inf, 4))
plot(vegc, col = rev(terrain.colors(4)), main = 'NDVI based thresholding')
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
library(raster)
library(sp)
library(dplyr)
library(tidyr)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data
plot(Img_Data)
crs(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
library(dplyr)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
library(raster)
library(sp)
library(dplyr)
library(tidyr)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data
plot(Img_Data)
crs(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
library(dplyr)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
sr <- sampleRandom(croped_Img, 10000)
plot(sr[,c(3,7)])
pca <- prcomp(sr, scale = TRUE)
pca <- prcomp(sr, scale = TRUE)
pci <- predict(ss, pca, index = 1:2)
pci
pca <- prcomp(sr, scale = TRUE)
pci <- predict(croped_Img, pca, index = 1:2)
pci
library(raster)
library(sp)
library(dplyr)
library(tidyr)
library(rpart)
Img_Data<- brick('Raster_Img_Ind.tif')
Img_Data
plot(Img_Data)
crs(Img_Data)
nlayers(Img_Data)
res(Img_Data)
names(Img_Data)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
subset_data<-subset(Img_Data, 1:8)
names(subset_data)
names(subset_data)<-c(1:8)
names(subset_data)
plot(subset_data)
new_extent<-extent(235000, 260000,  -375000,  -370000)
croped_Img<-crop(subset_data,new_extent)
(new_extent<-extent(235000, 260000,  -375000,  -370000))
(croped_Img<-crop(subset_data,new_extent))
plotRGB(croped_Img, r= 2, g = 8, b = 2,stretch ="lin",main="Vegetation")
ndvi<-(Img_Data[[7]] -Img_Data[[3]]) / (Img_Data[[7]] + Img_Data[[3]])
ndvi
plot(ndvi, col = rev(terrain.colors(6)), main = 'NDVI')
sr <- sampleRandom(croped_Img, 10000)
plot(sr[,c(3,7)])
pca <- prcomp(sr, scale = TRUE)
pci <- predict(croped_Img, pca, index = 1:2)
pci
samp_ran <- sampleRandom(croped_Img, 20000)
plot(samp_ran[,c(3,7)])
pro <- prcomp(sr, scale = TRUE)
pred <- predict(croped_Img, pro, index = 1:2)
pci
samp_ran <- sampleRandom(croped_Img, 20000)
pro <- prcomp(sr, scale = TRUE)
pred <- predict(croped_Img, pro, index = 1:2)
pci
install.packages("xls")
install.packages("xlsx")
library(xlsx)
install.packages("rjava")
install.packages("rJava")
install.packages("rJava")
read.xlsx("IPL_MATCH.xlsx")
read.xlsx("IPL_MATCH.xlsx",1)
IPL_MATCH<-read.xlsx("IPL_MATCH.xlsx",1)
library(dplyr)
n();
summarise(count=n())
summarise(count=nrow())
filter(match_winner="Gujarat Lions")
IPL_MATCH %>% filter(match_winner="Gujarat Lions")
IPL_MATCH %>% filter(match_winner=="Gujarat Lions")
IPL_MATCH %>% group_by(Season_Year) %>%
count()
IPL_MATCH %>% group_by(Season_Year) %>%
group_by(match_winner) %>% count()
IPL_MATCH %>% group_by(Season_Year,match_winner) %>%
count()
install.packages("xlsx")
install.packages("xlsx")
IPL_MATCH %>% group_by(match_winner) %>%
count()
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
count()
IPL_MATCH %>% group_by(match_winner) %>%
count()
IPL_MATCH %>% group_by(match_winner) %>%
group_by(Season_Year)
IPL_MATCH %>% group_by(match_winner) %>%
group_by(Season_Year) %>% count()
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_each(count())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_all(count())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_each(Matchwon=sum(match_winner))
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_all(Matchwon=sum(match_winner))
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_all(Matchwon=nrow())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarise_all(Matchwon=sum(match_id))
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
count_()
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize(won=n())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize(won=n())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize_each(won=n())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize_all(won=n())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize(won=n())
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
count(match_winner)
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
count(match_winner,Season_Year)
IPL_MATCH %>% group_by(match_winner,Season_Year) %>%
summarize(n=sum(match_winner))
IPL_MATCH %>% group_by(Season_Year) %>%
summarize(n=sum(match_winner))
IPL_MATCH %>% group_by(Season_Year) %>%
summarize(n=sum(as.data.frame(match_winner)))
IPL_MATCH %>% group_by(Season_Year) %>%
summarize(coun=n())
IPL_MATCH %>% group_by(Season_Year) %>%
summarize(coun=sum(match_winner))
IPL_MATCH %>% group_by(match_winner) %>%
summarize(coun=sum(match_winner))
IPL_MATCH %>% group_by(Season_Year) %>%
summarize(coun=n())
IPL_MATCH %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n())
IPL_MATCH %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n()) %>% group_by(Season_Year,match_winner)
IPL_MATCH %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n()) %>% group_by(match_winner)
IPL_MATCH %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n()) %>%
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n())
IPL_MATCH<-read.xlsx("IPL_MATCH.xlsx",1)
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(Season_Year,match_winner) %>%
summarize(coun=n())
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(Season_Year) %>%
summarize(coun=n())
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
summarize(coun=n())
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
filter(Season_Year=2016) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
filter(Season_Year==2016) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
group_by(Season_Year) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
summarize(group=group_by(Season_Year)) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
summarize(group=filter(Season_Year==2016) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
summarize(group=filter(Season_Year==2016) %>% count()
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner) %>%
summarize(group=filter(Season_Year==2016)) %>% count()
count(IPL_MATCH, c("match_winner", "Season_Year"))
count(IPL_MATCH, c("match_winner", "Season_Year"))
IPL_MATCH %>% select(Season_Year,match_winner) %>% group_by(match_winner,Season_Year) %>%
tally()
IPL_MATCH %>% group_by(match_winner,Season_Year)%>% tally()
View(x)
x<-IPL_MATCH %>% group_by(match_winner,Season_Year)%>% tally()
View(x)
x %>% group_by(Season_Year)
x<-IPL_MATCH %>% group_by(Season_Year)%>% tally()
x<-IPL_MATCH %>% group_by(Season_Year)%>% tally()
View(x)
install.packages("xlsx")
install.packages("xlsx")
IPL_MATCH %>% group_by(match_winner)%>% count()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange()
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange(n)
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange(dsc(n))
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange(asc(n))
IPL_MATCH %>% group_by(match_winner)%>% count() %>% arrange(dsc(n))
IPL_MATCH %>% group_by(match_winner)%>% count() %>% summarise(maxi=max())
x<-IPL_MATCH %>% group_by(match_winner)%>% count()
max(x,maxi)
max(x)
IPL_MATCH %>% count(match_winner,Season_Year) %>% group_by(match_winner)
IPL_MATCH %>% count(match_winner,Season_Year)
IPL_MATCH %>% count(match_winner,Season_Year) %>% group_by(Season_Year)
library(dplyr)
IPL_MATCH %>% count(match_winner) %>% group_by(Season_Year)
IPL_MATCH %>% count(match_winner,Season_Year) %>% group_by(Season_Year)
x<-IPL_MATCH %>% group_by(match_winner)%>% filter(Season_Year==2016)
IPL_MATCH %>% group_by(match_winner)%>% filter(Season_Year==2016)
IPL_MATCH %>% group_by(Season_Year)
IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner)
IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner) %>% arrange()
IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner) %>% arrange(n)
IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner)
x<-IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner)
view(x)
x<-IPL_MATCH %>% group_by(Season_Year) %>% count(match_winner)
View(x)
x<-IPL_MATCH %>% group_by(Season_Year,match_winner) %>% count(match_winner)
View(x)
x %>% filter(Season_Year==2016)
x %>% filter(Season_Year==2016) %>% summarize(maxi=max(n))
x %>% filter(Season_Year==2016)
x %>% filter(Season_Year==2016) %>% summarize(maxi=max(n))
x %>% filter(Season_Year==2016) %>% summarize(maxi=max())
x %>% filter(Season_Year==2016) %>% summarize(maxi=max(maxi))
x %>% filter(Season_Year==2016) %>% summarize(maxi=max(n))
install.packages("xlsx")
install.packages("xlsx")
x %>% group_by(Season_Year)
x %>% group_by(Season_Year)
x %>% filter(Season_Year==2016) %>% Colmax(n)
x %>% filter(Season_Year==2016) %>% ColMax(n)
x %>% filter(Season_Year==2016) %>% desc(n)
x %>% filter(Season_Year==2016) %>% dsc(n)
x %>% filter(Season_Year==2016)
x<-IPL_MATCH %>% group_by(Season_Year,match_winner) %>% summarize(matches_win=n())
View(x)
x %>% filter(Season_Year==2016)
x %>% filter(Season_Year==2016) $>$ arrange(matches_win)
x %>% filter(Season_Year==2016) %>% arrange(matches_win)
x %>% filter(Season_Year==2016) %>% arrange(desc(matches_win))
cor(x,Season_Year)
cor(IPL_MATCH,Season_Year)
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH")
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH","DIM_PLAYER_MATCH")
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH.xlsx","DIM_PLAYER_MATCH")
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH.xlt","DIM_PLAYER_MATCH")
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH.xlt","DIM_PLAYER_MATCH")
library(xlsx)
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH.xlt","DIM_PLAYER_MATCH")
PLAYER_MATCH<-read.xlsx("IPL_PLAYER_MATCH.xlsx","DIM_PLAYER_MATCH")
library(rsconnect)
rsconnect::setAccountInfo(name='ujjwal23', token='3B8BF1EB0507D651452601A0BFD52E1A',secret='tWEvddaZPy4lh+jrLeqnc+tND3he++NKQieI9gr0')
shiny::runApp('C:/Users/Ujjwal/Downloads/coursera-ddp-shiny-master')
